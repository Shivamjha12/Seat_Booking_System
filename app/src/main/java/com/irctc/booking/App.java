/*
 * This source file was generated by the Gradle 'init' task
 */
package com.irctc.booking;

import com.irctc.booking.entities.Ticket;
import com.irctc.booking.entities.Train;
import com.irctc.booking.entities.User;
import com.irctc.booking.services.TrainService;
import com.irctc.booking.services.UserBookingService;
import com.irctc.booking.util.UserServiceUtil;

import java.io.IOException;
import java.util.*;

public class App {


    public static void main(String[] args) {
        System.out.println("Running Train Booking System");
        Scanner sc =  new Scanner(System.in);
        int option = 0;
        UserBookingService userBookingServiceObj;
        TrainService trainServiceObj;
        try{
            userBookingServiceObj = new UserBookingService();

        }catch (IOException ex){
            System.out.println("Something Went Wrong: IOException Occured In COde");
            return;
        }

        try{
            trainServiceObj = new TrainService();
        } catch (IOException ex){
            System.out.println("Getting IO Error while Fetching Train List from json file");
            return;
        }


        while(option!=7){
            System.out.println("Choose Options: ");
            System.out.println("Enter 1. for sign up");
            System.out.println("Enter 2. for Login");
            System.out.println("Enter 3. for Fetch Bookings");
            System.out.println("Enter 4. for search trains");
            System.out.println("Enter 5 to book a seat");
            System.out.println("Enter 6 for cancel my bookings");
            System.out.println("Enter 7 to Exit from the application");

            option = sc.nextInt();

            switch(option){
                case 1:
                    sc.nextLine();
                    System.out.println("Enter Name: ");
                    String nameToSignup = sc.nextLine();
                    System.out.println("Enter Email: ");
                    String emailToSignUp = sc.nextLine();
                    System.out.println("Enter the city: ");
                    String cityToSignUp = sc.nextLine();
                    System.out.println("Enter Age: ");
                    Integer ageToSignUp = Integer.parseInt(sc.nextLine());
                    System.out.println("Enter Password to Signup");
                    String passwordToSignup= sc.nextLine();
                    User userToSignup = new User(nameToSignup,emailToSignUp.toLowerCase(), UUID.randomUUID().toString(),ageToSignUp,cityToSignUp,passwordToSignup, UserServiceUtil.hashPassword(passwordToSignup),new ArrayList<>());
                    userBookingServiceObj.signUp(userToSignup);
                    break;
                case 2:
                    sc.nextLine();
                    System.out.println("Enter Your Email");
                    String emailToLogin = sc.nextLine();
                    System.out.println("Enter Password: ");
                    String passwordToLogin = sc.nextLine();
                    Optional<User> loginUser = userBookingServiceObj.returnUserByEmailPassword(emailToLogin,passwordToLogin);
                    if(loginUser.isPresent()){

                        System.out.printf("Welcome %s from %s %n",loginUser.get().getName(),loginUser.get().getCity());


                    }else{
                        System.out.println("User Not Present in Db");
                        System.out.println("Please Look for Email and Password");
                    }
                    break;
                case 3:
                    Optional<User> currentUser = userBookingServiceObj.getUser();
                    if(currentUser.isPresent()){
//                        System.out.println("User Is Present in Case 3");
                        Optional<List<Ticket>> userTickets = userBookingServiceObj.getCurrentUserTickets();
                        if(userTickets.isPresent()){
//                            System.out.println("Tickets List Is Fetched in Case 3");
                            if(userTickets.get().isEmpty()){
                                System.out.printf("Hello %s You doesn't book any Ticket Yet \n",currentUser.get().getName());
                            }
                            else{userTickets.ifPresent(tickets -> {
                                tickets.forEach(Ticket -> {
                                    Ticket.getTicketInfo();
                                    System.out.println("Inside Tickets List Loop in Case 3");

                                });
                            });
                                }
//                            System.out.println("User Is Present in Case 3 Last Line inside if function");
                        }else{
                            System.out.printf("Hello %s we not able to find any tickets booked by you ", currentUser.get().getName());
                        }
                    }else{
                        System.out.println("Please Login On System, We don't able to find your tickets");
                    }
//                    System.out.println("Last Line of Case 3");

                case 4:
                    Optional<List<Train>> trainList = trainServiceObj.getTrainList();
                    if(trainList.isPresent()){
                        trainList.ifPresent(trains -> {
//                                    System.out.println("List is size: "+trains.size());
                                    trains.stream().distinct().forEach(train -> {
                                        System.out.println(train.getTrainInfo());
                                    });
                                }
                                );
                    }else{
                        System.out.println("Currently There is No Available, Please try After some time");
                    }
                    break;
                case 5:
                    Optional<User> currentUserToBookTicket = userBookingServiceObj.getUser();
                    if(currentUserToBookTicket.isPresent()){
                    System.out.println(" ");
                    Optional<List<Train>> trainListToSelect = trainServiceObj.getTrainList();
                    if(trainListToSelect.isPresent()){
                        trainListToSelect.ifPresent(trains ->
                                trains.forEach(train->{
                                    System.out.println(train.getTrainInfo());
                                })
                        );
                        System.out.println("Select Train to book Seat from List");
                        sc.nextLine();
                        String inputTrainIdToBook = sc.nextLine();
                        if(userBookingServiceObj.bookSeatUsingTrainId(inputTrainIdToBook)){
                            System.out.println("Your Ticket is Successfully booked in train: "+inputTrainIdToBook);
                        }
                        else{
                            System.out.println("Your Input Train id is: "+inputTrainIdToBook);
                        }


                    }else{
                        System.out.println("Currently There is No Available, Please try After some time");
                    }
                    }else{
                        System.out.println("Please Login First to book tickets");
                    }
                    break;





            }





        }
    }
}
